{"version":3,"sources":["../../../../../units/rb-example-ensayo-server/graphql/mutation/EnsayoAdd.js"],"names":["name","inputFields","Ensayo_Title","type","GraphQLNonNull","GraphQLString","Ensayo_Description","Ensayo_Content","outputFields","EnsayosEdge","EnsayosConnection","edgeType","resolve","local_id","args","context","rootValue","ec","objectManager","om","an_Object","getOneObject_async","id","arr","getObjectList_async","cursor","cursorForObjectInConnection","node","Viewer","ViewerType","parent","getViewerUserId","mutateAndGetPayload","add"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA,iH;;AAEA;;AAEe,gDAA6B;AAC1CA,EAAAA,IAAI,EAAE,WADoC;;AAG1CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,YAAY,EAAE,EAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB,CAAR,EADH;AAEXC,IAAAA,kBAAkB,EAAE,EAAEH,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB,CAAR,EAFT;AAGXE,IAAAA,cAAc,EAAE,EAAEJ,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB,CAAR,EAHL,EAH6B;;;AAS1CG,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AACXN,MAAAA,IAAI,EAAEO,2BAAkBC,QADb;AAEXC,MAAAA,OAAO,EAAE,OAAO,EAAEC,QAAF,EAAP,EAAqB,EAAE,GAAGC,IAAL,EAArB,EAAkCC,OAAlC,EAA2C,EAAEC,SAAS,EAAEC,EAAb,EAA3C,KAAiE;AACxE,cAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,cAAMC,SAAS,GAAG,MAAMF,aAAa,CAACG,kBAAd,CAAiC,QAAjC,EAA2C;AACjEC,UAAAA,EAAE,EAAET,QAD6D,EAA3C,CAAxB;;;AAIA,cAAMU,GAAG,GAAG,MAAML,aAAa,CAACM,mBAAd,CAAkC,QAAlC,EAA4C,EAA5C,CAAlB;;AAEA,eAAO;AACLC,UAAAA,MAAM,EAAEP,aAAa,CAACQ,2BAAd,CAA0C,QAA1C,EAAoDH,GAApD,EAAyDH,SAAzD,CADH;AAELO,UAAAA,IAAI,EAAEP,SAFD,EAAP;;AAID,OAdU,EADD;;;AAkBZQ,IAAAA,MAAM,EAAE;AACNzB,MAAAA,IAAI,EAAE0B,mBADA;AAENjB,MAAAA,OAAO,EAAE,CAACkB,MAAD,EAAShB,IAAT,EAAeC,OAAf,EAAwB,EAAEC,SAAS,EAAEC,EAAb,EAAxB,KAA8C;AACrD,cAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,eAAOD,aAAa,CAACG,kBAAd,CAAiC,MAAjC,EAAyC;AAC9CC,UAAAA,EAAE,EAAEJ,aAAa,CAACa,eAAd,EAD0C,EAAzC,CAAP;;AAGD,OAPK,EAlBI,EAT4B;;;;AAsC1CC,EAAAA,mBAAmB,EAAE;AACnB,IAAE9B,YAAF,EAAgBI,kBAAhB,EAAoCC,cAApC,EADmB;AAEnBQ,EAAAA,OAFmB;AAGnB,IAAEC,SAAS,EAAEC,EAAb,EAHmB;AAIhB;AACH,UAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,UAAMN,QAAQ,GAAG,MAAMK,aAAa,CAACe,GAAd,CAAkB,QAAlB,EAA4B;AACjD/B,MAAAA,YADiD;AAEjDI,MAAAA,kBAFiD;AAGjDC,MAAAA,cAHiD,EAA5B,CAAvB;;AAKA,WAAO,EAAEM,QAAF,EAAP;AACD,GAlDyC,EAA7B,C","sourcesContent":["// @flow\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport EnsayosConnection from '../type/EnsayosConnection'\nimport ObjectManager from '../../../rb-base-server/ObjectManager'\nimport ViewerType from '../../../../units/rb-appbase-server/graphql/type/ViewerType'\n\n//\n\nexport default mutationWithClientMutationId({\n  name: 'EnsayoAdd',\n\n  inputFields: {\n    Ensayo_Title: { type: new GraphQLNonNull(GraphQLString) },\n    Ensayo_Description: { type: new GraphQLNonNull(GraphQLString) },\n    Ensayo_Content: { type: new GraphQLNonNull(GraphQLString) },\n  },\n\n  outputFields: {\n    EnsayosEdge: {\n      type: EnsayosConnection.edgeType,\n      resolve: async ({ local_id }, { ...args }, context, { rootValue: ec }) => {\n        const objectManager: ObjectManager = ec.om()\n        const an_Object = await objectManager.getOneObject_async('Ensayo', {\n          id: local_id,\n        })\n\n        const arr = await objectManager.getObjectList_async('Ensayo', {})\n\n        return {\n          cursor: objectManager.cursorForObjectInConnection('Ensayo', arr, an_Object),\n          node: an_Object,\n        }\n      },\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: (parent, args, context, { rootValue: ec }) => {\n        const objectManager: ObjectManager = ec.om()\n        return objectManager.getOneObject_async('User', {\n          id: objectManager.getViewerUserId(),\n        })\n      },\n    },\n  },\n\n  mutateAndGetPayload: async (\n    { Ensayo_Title, Ensayo_Description, Ensayo_Content },\n    context,\n    { rootValue: ec },\n  ) => {\n    const objectManager: ObjectManager = ec.om()\n    const local_id = await objectManager.add('Ensayo', {\n      Ensayo_Title,\n      Ensayo_Description,\n      Ensayo_Content,\n    })\n    return { local_id }\n  },\n})\n"],"file":"EnsayoAdd.js"}