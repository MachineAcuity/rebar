{"version":3,"sources":["../../../../units/rb-demo-webapp/components/AppDrawerNavItems.jsx"],"names":["styles","theme","container","flex","width","formControl","marginTop","spacing","paddingLeft","paddingRight","list","AppDrawerNavItems","React","Component","render","classes","Viewer","onClick","props"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uH;;AAEA;;AAEA,MAAMA,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,SADG;AAETC,IAAAA,KAAK,EAAE,GAFE,EADc;;AAKzBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADA;AAEXC,IAAAA,WAAW,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd,CAFF;AAGXE,IAAAA,YAAY,EAAER,KAAK,CAACM,OAAN,CAAc,CAAd,CAHH,EALY;;AAUzBG,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAE,SADF;AAEJC,IAAAA,KAAK,EAAE,GAFH,EAVmB,EAAZ,CAAf;;;;AAgBA;;AAEA,MAAMO,iBAAN,SAAgCC,eAAMC;;;;;AAKnC;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEC,OAAF,EAAWC,MAAX,EAAmBC,OAAnB,KAA+B,KAAKC,KAA1C;;AAEA;AACE,4CAAK,SAAS,EAAEH,OAAO,CAACb,SAAxB;AACE,mCAAC,6BAAD;AACE,QAAA,GAAG,EAAC,SADN;AAEE,QAAA,MAAM,EAAEc,MAFV;AAGE,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWD,OAHtB,GADF;;AAME,mCAAC,aAAD,IAAM,SAAS,EAAEF,OAAO,CAACL,IAAzB;AACE,mCAAC,4BAAD;AACE,QAAA,IAAI,eAAE,6BAAC,cAAD,OADR;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAE,MAAMO,OAAO,CAAC,QAAD,CAHxB,GADF;;AAME,mCAAC,4BAAD;AACE,QAAA,IAAI,eAAE,6BAAC,eAAD,OADR;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,wBAAD,CAHxB,GANF;;AAWE,mCAAC,4BAAD;AACE,QAAA,IAAI,eAAE,6BAAC,iBAAD,OADR;AAEE,QAAA,KAAK,EAAC,eAFR;AAGE,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,UAAD,CAHxB,GAXF;;AAgBE,mCAAC,gBAAD,OAhBF;AAiBE,mCAAC,4BAAD;AACE,QAAA,IAAI,eAAE,6BAAC,mBAAD,OADR;AAEE,QAAA,KAAK,EAAC,qBAFR;AAGE,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,uBAAD,CAHxB,GAjBF;;AAsBE,mCAAC,4BAAD;AACE,QAAA,IAAI,eAAE,6BAAC,aAAD,OADR;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,eAAD,CAHxB,GAtBF,CANF,CADF;;;;;AAqCD,GAzCA;;;AA4CH;;AAEe,yCAAwB,wBAAWjB,MAAX,EAAmBW,iBAAnB,CAAxB,EAA+D;AAC5EK,EAAAA,MAAM,4JADsE,EAA/D,C","sourcesContent":["// @flow\n\nimport Divider from '@material-ui/core/Divider'\n\nimport List from '@material-ui/core/List'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport IconInbox from 'mdi-material-ui/Inbox'\nimport IconPencil from 'mdi-material-ui/Pencil'\nimport IconContacts from 'mdi-material-ui/Contacts'\nimport IconMoveResize from 'mdi-material-ui/MoveResize'\nimport IconLock from 'mdi-material-ui/Lock'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport AppDrawerAccountItem from '../../rb-account-management-webapp/components/AppDrawerAccountItem'\nimport NavMenuItemWithIcon from '../../rb-appdrawer-webapp/components/NavMenuItemWithIcon'\n\n//\n\nconst styles = (theme) => ({\n  container: {\n    flex: 'initial',\n    width: 250,\n  },\n  formControl: {\n    marginTop: theme.spacing(3),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  list: {\n    flex: 'initial',\n    width: 250,\n  },\n})\n\n//\n\nclass AppDrawerNavItems extends React.Component<{\n  classes: Object,\n  relay: Object,\n  Viewer: Object,\n  onClick: Function,\n}> {\n  render() {\n    const { classes, Viewer, onClick } = this.props\n\n    return (\n      <div className={classes.container}>\n        <AppDrawerAccountItem\n          key=\"account\"\n          Viewer={Viewer}\n          onClick={this.props.onClick}\n        />\n        <List className={classes.list}>\n          <NavMenuItemWithIcon\n            icon={<IconInbox />}\n            label=\"To Dos\"\n            onClick={() => onClick('/todo/')}\n          />\n          <NavMenuItemWithIcon\n            icon={<IconPencil />}\n            label=\"Ensayo Edit\"\n            onClick={() => onClick('/ensayo/in-place-edit/')}\n          />\n          <NavMenuItemWithIcon\n            icon={<IconContacts />}\n            label=\"Ensayo Public\"\n            onClick={() => onClick('/ensayo/')}\n          />\n          <Divider />\n          <NavMenuItemWithIcon\n            icon={<IconMoveResize />}\n            label=\"Viewport Dimensions\"\n            onClick={() => onClick('/viewport-dimensions/')}\n          />\n          <NavMenuItemWithIcon\n            icon={<IconLock />}\n            label=\"Force Login\"\n            onClick={() => onClick('/force-login/')}\n          />\n        </List>\n      </div>\n    )\n  }\n}\n\n//export default withStyles(styles)(AppDrawerNavItems)\n\nexport default createFragmentContainer(withStyles(styles)(AppDrawerNavItems), {\n  Viewer: graphql`\n    fragment AppDrawerNavItems_Viewer on Viewer {\n      ...AppDrawerAccountItem_Viewer\n      User_IsAnonymous\n    }\n  `,\n})\n"],"file":"AppDrawerNavItems.js"}