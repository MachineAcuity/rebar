{"version":3,"sources":["../../../../../units/rb-example-todo-server/graphql/mutation/ToDoUpdateStatus.js"],"names":["name","inputFields","id","type","GraphQLNonNull","GraphQLID","ToDo_Complete","GraphQLBoolean","outputFields","ToDo","ToDoType","resolve","local_id","args","context","rootValue","ec","objectManager","om","getOneObject_async","Viewer","ViewerType","parent","getViewerUserId","mutateAndGetPayload","update"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA,iH,8FAPA;;AASA;;AAEe,gDAA6B;AAC1CA,EAAAA,IAAI,EAAE,kBADoC;;AAG1CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,EAAE,EAAE,EAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,kBAAnB,CAAR,EADO;AAEXC,IAAAA,aAAa,EAAE,EAAEH,IAAI,EAAE,IAAIC,uBAAJ,CAAmBG,uBAAnB,CAAR,EAFJ,EAH6B;;;AAQ1CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AACJN,MAAAA,IAAI,EAAEO,iBADF;AAEJC,MAAAA,OAAO,EAAE,CAAC,EAAEC,QAAF,EAAD,EAAe,EAAE,GAAGC,IAAL,EAAf,EAA4BC,OAA5B,EAAqC,EAAEC,SAAS,EAAEC,EAAb,EAArC,KAA2D;AAClE,cAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,eAAOD,aAAa,CAACE,kBAAd,CAAiC,MAAjC,EAAyC,EAAEjB,EAAE,EAAEU,QAAN,EAAzC,CAAP;AACD,OALG,EADM;;;AASZQ,IAAAA,MAAM,EAAE;AACNjB,MAAAA,IAAI,EAAEkB,mBADA;AAENV,MAAAA,OAAO,EAAE,CAACW,MAAD,EAAST,IAAT,EAAeC,OAAf,EAAwB,EAAEC,SAAS,EAAEC,EAAb,EAAxB,KAA8C;AACrD,cAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,eAAOD,aAAa,CAACE,kBAAd,CAAiC,MAAjC,EAAyC;AAC9CjB,UAAAA,EAAE,EAAEe,aAAa,CAACM,eAAd,EAD0C,EAAzC,CAAP;;AAGD,OAPK,EATI,EAR4B;;;;AA4B1CC,EAAAA,mBAAmB,EAAE,OAAO,EAAEtB,EAAF,EAAMI,aAAN,EAAP,EAA8BQ,OAA9B,EAAuC,EAAEC,SAAS,EAAEC,EAAb,EAAvC,KAA6D;AAChF,UAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,UAAMN,QAAQ,GAAG,gCAAaV,EAAb,EAAiBA,EAAlC;;AAEA,UAAMe,aAAa,CAACQ,MAAd,CAAqB,MAArB,EAA6B;AACjCvB,MAAAA,EAAE,EAAEU,QAD6B;AAEjCN,MAAAA,aAFiC,EAA7B,CAAN;;;AAKA,WAAO,EAAEM,QAAF,EAAP;AACD,GAtCyC,EAA7B,C","sourcesContent":["// @flow weak\n\nimport { fromGlobalId, mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLBoolean, GraphQLID, GraphQLNonNull } from 'graphql'\n\nimport ObjectManager from '../../../rb-base-server/ObjectManager'\nimport ToDoType from '../type/ToDoType'\nimport ViewerType from '../../../../units/rb-appbase-server/graphql/type/ViewerType'\n\n//\n\nexport default mutationWithClientMutationId({\n  name: 'ToDoUpdateStatus',\n\n  inputFields: {\n    id: { type: new GraphQLNonNull(GraphQLID) },\n    ToDo_Complete: { type: new GraphQLNonNull(GraphQLBoolean) },\n  },\n\n  outputFields: {\n    ToDo: {\n      type: ToDoType,\n      resolve: ({ local_id }, { ...args }, context, { rootValue: ec }) => {\n        const objectManager: ObjectManager = ec.om()\n        return objectManager.getOneObject_async('ToDo', { id: local_id })\n      },\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: (parent, args, context, { rootValue: ec }) => {\n        const objectManager: ObjectManager = ec.om()\n        return objectManager.getOneObject_async('User', {\n          id: objectManager.getViewerUserId(),\n        })\n      },\n    },\n  },\n\n  mutateAndGetPayload: async ({ id, ToDo_Complete }, context, { rootValue: ec }) => {\n    const objectManager: ObjectManager = ec.om()\n    const local_id = fromGlobalId(id).id\n\n    await objectManager.update('ToDo', {\n      id: local_id,\n      ToDo_Complete,\n    })\n\n    return { local_id }\n  },\n})\n"],"file":"ToDoUpdateStatus.js"}