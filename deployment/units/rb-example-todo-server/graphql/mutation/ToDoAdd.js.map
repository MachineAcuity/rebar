{"version":3,"sources":["../../../../../units/rb-example-todo-server/graphql/mutation/ToDoAdd.js"],"names":["name","inputFields","ToDo_Text","type","GraphQLNonNull","GraphQLString","outputFields","ToDosEdge","ToDosConnection","edgeType","resolve","local_id","args","context","rootValue","ec","objectManager","om","an_Object","getOneObject_async","id","arr","getObjectList_async","cursor","cursorForObjectInConnection","node","Viewer","ViewerType","parent","getViewerUserId","mutateAndGetPayload","add","ToDo_Complete"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA,iH,8FAPA;;AASA;;AAEe,gDAA6B;AAC1CA,EAAAA,IAAI,EAAE,SADoC;;AAG1CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,EAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB,CAAR,EADA,EAH6B;;;AAO1CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,IAAI,EAAEK,yBAAgBC,QADb;AAETC,MAAAA,OAAO,EAAE,OAAO,EAAEC,QAAF,EAAP,EAAqB,EAAE,GAAGC,IAAL,EAArB,EAAkCC,OAAlC,EAA2C,EAAEC,SAAS,EAAEC,EAAb,EAA3C,KAAiE;AACxE,cAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,cAAMC,SAAS,GAAG,MAAMF,aAAa,CAACG,kBAAd,CAAiC,MAAjC,EAAyC;AAC/DC,UAAAA,EAAE,EAAET,QAD2D,EAAzC,CAAxB;;;AAIA,cAAMU,GAAG,GAAG,MAAML,aAAa,CAACM,mBAAd,CAAkC,MAAlC,EAA0C,EAA1C,CAAlB;;AAEA,eAAO;AACLC,UAAAA,MAAM,EAAEP,aAAa,CAACQ,2BAAd,CAA0C,MAA1C,EAAkDH,GAAlD,EAAuDH,SAAvD,CADH;AAELO,UAAAA,IAAI,EAAEP,SAFD,EAAP;;AAID,OAdQ,EADC;;;AAkBZQ,IAAAA,MAAM,EAAE;AACNvB,MAAAA,IAAI,EAAEwB,mBADA;AAENjB,MAAAA,OAAO,EAAE,CAACkB,MAAD,EAAShB,IAAT,EAAeC,OAAf,EAAwB,EAAEC,SAAS,EAAEC,EAAb,EAAxB,KAA8C;AACrD,cAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,eAAOD,aAAa,CAACG,kBAAd,CAAiC,MAAjC,EAAyC;AAC9CC,UAAAA,EAAE,EAAEJ,aAAa,CAACa,eAAd,EAD0C,EAAzC,CAAP;;AAGD,OAPK,EAlBI,EAP4B;;;;AAoC1CC,EAAAA,mBAAmB,EAAE,OAAO,EAAE5B,SAAF,EAAP,EAAsBW,OAAtB,EAA+B,EAAEC,SAAS,EAAEC,EAAb,EAA/B,KAAqD;AACxE,UAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,UAAMN,QAAQ,GAAG,MAAMK,aAAa,CAACe,GAAd,CAAkB,MAAlB,EAA0B;AAC/C7B,MAAAA,SAD+C;AAE/C8B,MAAAA,aAAa,EAAE,KAFgC,EAA1B,CAAvB;;AAIA,WAAO,EAAErB,QAAF,EAAP;AACD,GA3CyC,EAA7B,C","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport ObjectManager from '../../../rb-base-server/ObjectManager'\nimport ToDosConnection from '../type/ToDosConnection'\nimport ViewerType from '../../../../units/rb-appbase-server/graphql/type/ViewerType'\n\n//\n\nexport default mutationWithClientMutationId({\n  name: 'ToDoAdd',\n\n  inputFields: {\n    ToDo_Text: { type: new GraphQLNonNull(GraphQLString) },\n  },\n\n  outputFields: {\n    ToDosEdge: {\n      type: ToDosConnection.edgeType,\n      resolve: async ({ local_id }, { ...args }, context, { rootValue: ec }) => {\n        const objectManager: ObjectManager = ec.om()\n        const an_Object = await objectManager.getOneObject_async('ToDo', {\n          id: local_id,\n        })\n\n        const arr = await objectManager.getObjectList_async('ToDo', {})\n\n        return {\n          cursor: objectManager.cursorForObjectInConnection('ToDo', arr, an_Object),\n          node: an_Object,\n        }\n      },\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: (parent, args, context, { rootValue: ec }) => {\n        const objectManager: ObjectManager = ec.om()\n        return objectManager.getOneObject_async('User', {\n          id: objectManager.getViewerUserId(),\n        })\n      },\n    },\n  },\n\n  mutateAndGetPayload: async ({ ToDo_Text }, context, { rootValue: ec }) => {\n    const objectManager: ObjectManager = ec.om()\n    const local_id = await objectManager.add('ToDo', {\n      ToDo_Text,\n      ToDo_Complete: false,\n    })\n    return { local_id }\n  },\n})\n"],"file":"ToDoAdd.js"}