{"version":3,"sources":["../../../../../units/rb-example-todo-server/graphql/type/_ViewerFields.js"],"names":["ToDos","type","ToDosConnection","connectionType","args","status","GraphQLString","defaultValue","connectionArgs","resolve","obj","context","rootValue","ec","objectManager","om","arr","getObjectList_async","filter","a_ToDo","ToDo_Complete","ToDo_TotalCount","GraphQLInt","length","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA;AACA,4E,8FANA;;AAQA;;AAEe;AACbA,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,yBAAgBC,cADjB;;AAGLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,IAAI,EAAEK,sBADA;AAENC,QAAAA,YAAY,EAAE,KAFR,EADJ;;AAKJ,SAAGC,4BALC,EAHD;;;AAWLC,IAAAA,OAAO,EAAE,OAAOC,GAAP,EAAY,EAAEL,MAAF,EAAU,GAAGD,IAAb,EAAZ,EAAiCO,OAAjC,EAA0C,EAAEC,SAAS,EAAEC,EAAb,EAA1C,KAAgE;AACvE,YAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,YAAMC,GAAG,GAAG,MAAMF,aAAa,CAACG,mBAAd,CAAkC,MAAlC,EAA0C,EAA1C,CAAlB;;AAEA,aAAO;AACLD,MAAAA,GAAG,CAACE,MAAJ;AACGC,MAAAA,MAAD,IAAYd,MAAM,KAAK,KAAX,IAAoBc,MAAM,CAACC,aAAP,MAA0Bf,MAAM,KAAK,WAArC,CADlC,CADK;;AAILD,MAAAA,IAJK,CAAP;;AAMD,KArBI,EADM;;;AAyBbiB,EAAAA,eAAe,EAAE;AACfpB,IAAAA,IAAI,EAAEqB,mBADS;;AAGfb,IAAAA,OAAO,EAAE,OAAOC,GAAP,EAAY,EAAE,GAAGN,IAAL,EAAZ,EAAyBO,OAAzB,EAAkC,EAAEC,SAAS,EAAEC,EAAb,EAAlC,KAAwD;AAC/D,YAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,YAAMC,GAAG,GAAG,MAAMF,aAAa,CAACG,mBAAd,CAAkC,MAAlC,EAA0C,EAA1C,CAAlB;;AAEA,aAAOD,GAAG,CAACO,MAAX;AACD,KARc,EAzBJ;;;AAoCbC,EAAAA,mBAAmB,EAAE;AACnBvB,IAAAA,IAAI,EAAEqB,mBADa;;AAGnBb,IAAAA,OAAO,EAAE,OAAOC,GAAP,EAAY,EAAE,GAAGN,IAAL,EAAZ,EAAyBO,OAAzB,EAAkC,EAAEC,SAAS,EAAEC,EAAb,EAAlC,KAAwD;AAC/D,YAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,YAAMC,GAAG,GAAG,MAAMF,aAAa,CAACG,mBAAd,CAAkC,MAAlC,EAA0C,EAA1C,CAAlB;;AAEA,aAAOD,GAAG,CAACE,MAAJ,CAAYC,MAAD,IAAYA,MAAM,CAACC,aAA9B,EAA6CG,MAApD;AACD,KARkB,EApCR,E","sourcesContent":["// @flow weak\n\nimport { GraphQLInt, GraphQLString } from 'graphql'\nimport { connectionArgs, connectionFromArray } from 'graphql-relay'\n\nimport ObjectManager from '../../../rb-base-server/ObjectManager'\nimport ToDosConnection from './ToDosConnection'\n\n//\n\nexport default {\n  ToDos: {\n    type: ToDosConnection.connectionType,\n\n    args: {\n      status: {\n        type: GraphQLString,\n        defaultValue: 'any',\n      },\n      ...connectionArgs,\n    },\n\n    resolve: async (obj, { status, ...args }, context, { rootValue: ec }) => {\n      const objectManager: ObjectManager = ec.om()\n      const arr = await objectManager.getObjectList_async('ToDo', {})\n\n      return connectionFromArray(\n        arr.filter(\n          (a_ToDo) => status === 'any' || a_ToDo.ToDo_Complete === (status === 'completed'),\n        ),\n        args,\n      )\n    },\n  },\n\n  ToDo_TotalCount: {\n    type: GraphQLInt,\n\n    resolve: async (obj, { ...args }, context, { rootValue: ec }) => {\n      const objectManager: ObjectManager = ec.om()\n      const arr = await objectManager.getObjectList_async('ToDo', {})\n\n      return arr.length\n    },\n  },\n\n  ToDo_CompletedCount: {\n    type: GraphQLInt,\n\n    resolve: async (obj, { ...args }, context, { rootValue: ec }) => {\n      const objectManager: ObjectManager = ec.om()\n      const arr = await objectManager.getObjectList_async('ToDo', {})\n\n      return arr.filter((a_ToDo) => a_ToDo.ToDo_Complete).length\n    },\n  },\n}\n"],"file":"_ViewerFields.js"}