{"version":3,"sources":["../../../units/rb-image-manager-server/ImageUploadConfiguration.js"],"names":["ImageUploadConfiguration","isProperConfiguration","req","Error","verifyUserPermissions","objectManager","generateFileNames_async"],"mappings":";;AAEA,wF;;AAEA;;AAEA;;;AAGe,MAAMA,wBAAN,CAA+B;AAC5C;AACAC,EAAAA,qBAAqB,CAACC,GAAD,EAAuB;AAC1C,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED;AACA,QAAMC,qBAAN,CAA4BC,aAA5B,EAA0DH,GAA1D,EAAuE;AACrE,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED;AACA,QAAMG,uBAAN;AACED,EAAAA,aADF;AAEEH,EAAAA,GAFF;AAG0E;AACxE,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD,GAjB2C,C","sourcesContent":["// @flow\n\nimport ObjectManager from '../rb-base-server/ObjectManager'\n\n//\n\n/**\n * Base class for image upload configuration\n */\nexport default class ImageUploadConfiguration {\n  /** Detemines whether this configuration applies to the provided request */\n  isProperConfiguration(req: Object): boolean {\n    throw new Error('not implemented')\n  }\n\n  /** Verify that the currently logged in user has permissions to upload */\n  async verifyUserPermissions(objectManager: ObjectManager, req: Object) {\n    throw new Error('not implemented')\n  }\n\n  /** Generates local, and returned, file name for the upload */\n  async generateFileNames_async(\n    objectManager: ObjectManager,\n    req: Object,\n  ): Promise<{ localImageFileName: string, returnedImageFileName: string }> {\n    throw new Error('not implemented')\n  }\n}\n"],"file":"ImageUploadConfiguration.js"}