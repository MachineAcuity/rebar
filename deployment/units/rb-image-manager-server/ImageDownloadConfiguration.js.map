{"version":3,"sources":["../../../units/rb-image-manager-server/ImageDownloadConfiguration.js"],"names":["ImageDownloadConfiguration","isProperConfiguration","req","Error","verifyUserPermissions","objectManager","getLocalFileName_async"],"mappings":";;AAEA,wF;;AAEA;;AAEA;;;AAGe,MAAMA,0BAAN,CAAiC;AAC9C;AACAC,EAAAA,qBAAqB,CAACC,GAAD,EAAuB;AAC1C,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED;AACA,QAAMC,qBAAN,CAA4BC,aAA5B,EAA0DH,GAA1D,EAAuE;AACrE,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED;AACA,QAAMG,sBAAN,CAA6BD,aAA7B,EAA2DH,GAA3D,EAAyF;AACvF,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD,GAd6C,C","sourcesContent":["// @flow\n\nimport ObjectManager from '../rb-base-server/ObjectManager'\n\n//\n\n/**\n * Base class for image download configuration\n */\nexport default class ImageDownloadConfiguration {\n  /** Detemines whether this configuration applies to the provided request */\n  isProperConfiguration(req: Object): boolean {\n    throw new Error('not implemented')\n  }\n\n  /** Verify that the currently logged in user has permissions to download */\n  async verifyUserPermissions(objectManager: ObjectManager, req: Object) {\n    throw new Error('not implemented')\n  }\n\n  /** Determines the local file name to be served*/\n  async getLocalFileName_async(objectManager: ObjectManager, req: Object): Promise<string> {\n    throw new Error('not implemented')\n  }\n}\n"],"file":"ImageDownloadConfiguration.js"}