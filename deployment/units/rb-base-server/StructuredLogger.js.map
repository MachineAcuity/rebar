{"version":3,"sources":["../../../units/rb-base-server/StructuredLogger.js"],"names":["StructuredLoggerWriter","constructor","on","arrLog","fun","spawn","StructuredLogger","write","fs","writeFileSync","JSON","stringify","structuredLoggerWriter","arrParamsRoot","parent","children","update","arrParamsSuffix","payload","logger","get","push","arrParams","getExecutor","ixParams","length","key","concat"],"mappings":";;AAEA,gD;;AAEO,MAAMA,sBAAN,CAA6B;;;;;;AAMlCC,EAAAA,WAAW,CAACC,EAAD,EAAc;AACvB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,GAAL,GAAW,EAAX;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIC,gBAAJ,CAAqB,IAArB,CAAP;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACNC,gBAAGC,aAAH,CAAiB,wCAAjB,EAA2DC,IAAI,CAACC,SAAL,CAAe,KAAKR,MAApB,EAA4B,IAA5B,EAAkC,CAAlC,CAA3D;AACD,GAlBiC,C;;;AAqBrB,MAAMG,gBAAN,CAAuB;;;;;;;;;AASpCL,EAAAA,WAAW,CAACW,sBAAD,EAAiD;AAC1D,SAAKA,sBAAL,GAA8BA,sBAA9B;AACA,SAAKV,EAAL,GAAUU,sBAAsB,CAACV,EAAjC;AACA,SAAKE,GAAL,GAAWQ,sBAAsB,CAACR,GAAlC;;AAEA,SAAKS,aAAL,GAAqB,EAArB;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAEDC,EAAAA,MAAM,CAACC,eAAD,EAA8BC,OAA9B,EAA+C;AACnD,UAAMC,MAAM,GAAG,KAAKC,GAAL,CAASH,eAAT,CAAf;;AAEA,SAAKL,sBAAL,CAA4BT,MAA5B,CAAmCkB,IAAnC,CAAwC;AACtCC,MAAAA,SAAS,EAAEH,MAAM,CAACN,aADoB;AAEtCK,MAAAA,OAFsC,EAAxC;;AAID;;AAEDE,EAAAA,GAAG,CAACH,eAAD,EAA8B;AAC/B,WAAO,KAAKM,WAAL,CAAiBN,eAAjB,EAAkC,CAAlC,CAAP;AACD;;AAEDM,EAAAA,WAAW,CAACN,eAAD,EAA8BO,QAA9B,EAAgD;AACzD,QAAIP,eAAe,CAACQ,MAAhB,KAA2BD,QAA/B,EAAyC;AACvC,aAAO,IAAP;AACD;;AAED,UAAME,GAAG,GAAGT,eAAe,CAACO,QAAD,CAA3B;AACA,QAAIL,MAAM,GAAG,KAAKJ,QAAL,CAAcW,GAAd,CAAb;AACA,QAAI,CAACP,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKJ,QAAL,CAAcW,GAAd,IAAqB,IAAIpB,gBAAJ,CAAqB,KAAKM,sBAA1B,CAA9B;;AAEAO,MAAAA,MAAM,CAACN,aAAP,GAAuB,KAAKA,aAAL,CAAmBc,MAAnB,CAA0B,CAAED,GAAF,CAA1B,CAAvB;AACAP,MAAAA,MAAM,CAACL,MAAP,GAAgB,IAAhB;AACD;;AAED,WAAOK,MAAM,CAACI,WAAP,CAAmBN,eAAnB,EAAoCO,QAAQ,GAAG,CAA/C,CAAP;AACD;;AAEDnB,EAAAA,KAAK,CAACY,eAAD,EAA8B;AACjC,UAAME,MAAM,GAAG,IAAIb,gBAAJ,CAAqB,KAAKM,sBAA1B,CAAf;;AAEAO,IAAAA,MAAM,CAACN,aAAP,GAAuB,KAAKA,aAAL,CAAmBc,MAAnB,CAA0BV,eAA1B,CAAvB;AACAE,IAAAA,MAAM,CAACL,MAAP,GAAgB,IAAhB;;AAEA,WAAOK,MAAP;AACD,GAxDmC,C","sourcesContent":["// @flow\n\nimport fs from 'fs'\n\nexport class StructuredLoggerWriter {\n  on: boolean\n  fun: Object\n\n  arrLog: Array<{ arrParams: Array<any>, payload: any }>\n\n  constructor(on: boolean) {\n    this.on = on\n    this.arrLog = []\n    this.fun = {}\n  }\n\n  spawn() {\n    return new StructuredLogger(this)\n  }\n\n  write() {\n    fs.writeFileSync('units/rb-log-viewer-tools/log/log.json', JSON.stringify(this.arrLog, null, 2))\n  }\n}\n\nexport default class StructuredLogger {\n  on: boolean\n  fun: Object\n\n  arrParamsRoot: Array<any>\n  structuredLoggerWriter: StructuredLoggerWriter\n  parent: StructuredLogger | null\n  children: { [any]: StructuredLogger }\n\n  constructor(structuredLoggerWriter: StructuredLoggerWriter) {\n    this.structuredLoggerWriter = structuredLoggerWriter\n    this.on = structuredLoggerWriter.on\n    this.fun = structuredLoggerWriter.fun\n\n    this.arrParamsRoot = []\n    this.parent = null\n    this.children = {}\n  }\n\n  update(arrParamsSuffix: Array<any>, payload: Object) {\n    const logger = this.get(arrParamsSuffix)\n\n    this.structuredLoggerWriter.arrLog.push({\n      arrParams: logger.arrParamsRoot,\n      payload,\n    })\n  }\n\n  get(arrParamsSuffix: Array<any>) {\n    return this.getExecutor(arrParamsSuffix, 0)\n  }\n\n  getExecutor(arrParamsSuffix: Array<any>, ixParams: number) {\n    if (arrParamsSuffix.length === ixParams) {\n      return this\n    }\n\n    const key = arrParamsSuffix[ixParams]\n    let logger = this.children[key]\n    if (!logger) {\n      logger = this.children[key] = new StructuredLogger(this.structuredLoggerWriter)\n\n      logger.arrParamsRoot = this.arrParamsRoot.concat([ key ])\n      logger.parent = this\n    }\n\n    return logger.getExecutor(arrParamsSuffix, ixParams + 1)\n  }\n\n  spawn(arrParamsSuffix: Array<any>) {\n    const logger = new StructuredLogger(this.structuredLoggerWriter)\n\n    logger.arrParamsRoot = this.arrParamsRoot.concat(arrParamsSuffix)\n    logger.parent = this\n\n    return logger\n  }\n}\n"],"file":"StructuredLogger.js"}