{"version":3,"sources":["../../../units/rb-base-server/ensurePathExists.js"],"names":["fs","fsWithCallbacks","promises","ensurePathExists","filePath","mkdir","err","code","NestedError"],"mappings":";;AAEA;;AAEA,gF;;AAEA,MAAMA,EAAE,GAAGC,YAAgBC,QAA3B;;AAEA;;AAE+BC,gB,GAAf,eAAeA,gBAAf,CAAgCC,QAAhC,EAAkD;AAChE,MAAI;AACF,UAAMJ,EAAE,CAACK,KAAH,CAASD,QAAT,CAAN;AACD,GAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,QAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;AACzB,YAAM,IAAIC,0BAAJ,CAAgB,yCAAhB,EAA2DF,GAA3D,CAAN;AACD;AACF;AACF,C","sourcesContent":["// @flow\n\nimport fsWithCallbacks from 'fs'\n\nimport NestedError from 'nested-error-stacks'\n\nconst fs = fsWithCallbacks.promises\n\n//\n\nexport default (async function ensurePathExists(filePath: string) {\n  try {\n    await fs.mkdir(filePath)\n  } catch (err) {\n    if (err.code !== 'EEXIST') {\n      throw new NestedError('rb-base-server ensurePathExists: Failed', err)\n    }\n  }\n})\n"],"file":"ensurePathExists.js"}