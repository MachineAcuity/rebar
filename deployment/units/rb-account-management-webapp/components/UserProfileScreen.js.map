{"version":3,"sources":["../../../../units/rb-account-management-webapp/components/UserProfileScreen.jsx"],"names":["styles","card","minWidth","maxWidth","cardHeaderContentStyles","UserProfileScreen","React","Component","constructor","props","context","User_DisplayName","User_PrimaryEmail","User_PrimaryPhone","Viewer","imageURL","state","render","classes","User_IsAnonymous","isUserProfilePhoto","value","setState","_handle_onChange_DisplayName","_handle_onChange_PrimaryEmail","_handle_onChange_PrimaryPhone","_handle_onClick_Update","_handle_onClick_ChangePassword","event","target","router","push","relay","UserUpdateMutation","commit","environment"],"mappings":"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","sourcesContent":["// @flow\n\nimport { withRouter } from 'found'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport IconAccountSettings from 'mdi-material-ui/AccountSettings'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport CompositeCardHeader, {\n  cardHeaderContentStyles,\n} from '../../rb-appbase-webapp/components/CompositeCardHeader'\nimport ImageManagerUploader from '../../rb-image-manager-webapp/components/ImageManagerUploader'\nimport UserUpdateMutation from '../../rb-account-management-client/relay/UserUpdateMutation'\nimport RequiresAuthenticationNotice from '../../rb-account-management-webapp/components/RequiresAuthentication'\nimport ResponsiveContentArea from '../../rb-appbase-webapp/components/ResponsiveContentArea'\n\n//\n\nconst styles = {\n  card: {\n    minWidth: 350,\n    maxWidth: 1200,\n  },\n  ...cardHeaderContentStyles,\n}\n\n//\n\nclass UserProfileScreen extends React.Component<\n  {\n    classes: Object,\n    relay: Object,\n    router: Object,\n    Viewer: {\n      User_IsAnonymous: boolean,\n      User_DisplayName: string,\n      User_PrimaryEmail: string,\n      User_PrimaryPhone: string,\n    },\n  },\n  {\n    imageURL: string,\n    User_DisplayName: string,\n    User_PrimaryEmail: string,\n    User_PrimaryPhone: string,\n  },\n> {\n  constructor(props, context) {\n    super(props, context)\n\n    const { User_DisplayName, User_PrimaryEmail, User_PrimaryPhone } = props.Viewer\n\n    const imageURL = 'Place original image url? How do we know if there is a photo?'\n\n    this.state = { imageURL, User_DisplayName, User_PrimaryEmail, User_PrimaryPhone }\n  }\n\n  _handle_onChange_DisplayName = (event) => {\n    const User_DisplayName = event.target.value\n\n    this.setState({ User_DisplayName })\n  }\n\n  _handle_onChange_PrimaryEmail = (event) => {\n    const User_PrimaryEmail = event.target.value\n\n    this.setState({ User_PrimaryEmail })\n  }\n\n  _handle_onChange_PrimaryPhone = (event) => {\n    const User_PrimaryPhone = event.target.value\n\n    this.setState({ User_PrimaryPhone })\n  }\n\n  _handle_onClick_ChangePassword = () => {\n    this.props.router.push('/user/change-secret')\n  }\n\n  _handle_onClick_Update = () => {\n    const { User_DisplayName, User_PrimaryEmail, User_PrimaryPhone } = this.state\n    const { relay } = this.props\n\n    UserUpdateMutation.commit(\n      relay.environment,\n      User_DisplayName,\n      User_PrimaryEmail,\n      User_PrimaryPhone,\n    )\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n\n    if (Viewer.User_IsAnonymous) return <RequiresAuthenticationNotice />\n\n    const { imageURL, User_DisplayName, User_PrimaryEmail, User_PrimaryPhone } = this.state\n\n    return (\n      <ResponsiveContentArea>\n        <CompositeCardHeader\n          icon={<IconAccountSettings />}\n          subTitle=\"Profile &amp; settings\"\n          title=\"User\"\n        />\n\n        <Card className={classes.card}>\n          <CardContent>\n            <ImageManagerUploader\n              label=\"Profile photo\"\n              parameters={{ isUserProfilePhoto: 'true' }}\n              value={imageURL}\n              onChange={(value) => {\n                this.setState({ imageURL: value })\n              }}\n            />\n\n            <TextField\n              autoComplete=\"name\"\n              fullWidth={true}\n              label=\"Display Name\"\n              margin=\"normal\"\n              value={User_DisplayName}\n              variant=\"outlined\"\n              onChange={this._handle_onChange_DisplayName}\n            />\n\n            <TextField\n              autoComplete=\"email\"\n              fullWidth={true}\n              label=\"Contact email (not account identifier)\"\n              margin=\"normal\"\n              value={User_PrimaryEmail}\n              variant=\"outlined\"\n              onChange={this._handle_onChange_PrimaryEmail}\n            />\n\n            <TextField\n              autoComplete=\"tel\"\n              fullWidth={true}\n              label=\"Contact phone\"\n              margin=\"normal\"\n              value={User_PrimaryPhone}\n              variant=\"outlined\"\n              onChange={this._handle_onChange_PrimaryPhone}\n            />\n          </CardContent>\n\n          <CardActions>\n            <Button onClick={this._handle_onClick_Update}>Update</Button>\n            <Button onClick={this._handle_onClick_ChangePassword}>Change password</Button>\n          </CardActions>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(withStyles(styles)(withRouter(UserProfileScreen)), {\n  Viewer: graphql`\n    fragment UserProfileScreen_Viewer on Viewer {\n      id\n      User_IsAnonymous\n      User_DisplayName\n      User_PrimaryEmail\n      User_PrimaryPhone\n    }\n  `,\n})\n"],"file":"UserProfileScreen.js"}