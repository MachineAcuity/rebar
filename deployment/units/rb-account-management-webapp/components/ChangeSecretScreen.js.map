{"version":3,"sources":["../../../../units/rb-account-management-webapp/components/ChangeSecretScreen.jsx"],"names":["styles","card","minWidth","maxWidth","cardHeaderContentStyles","ChangeSecretScreen","React","Component","constructor","props","context","_handle_onClick_Change","User_CurrentSecret","User_NewSecret","state","setState","currentOperation","loc","window","location","host","protocol","hostname","port","response","fetch","method","credentials","headers","body","JSON","stringify","responseData","json","success","executionStatus","error","err","message","_handle_onClick_CancelChange","_handle_onClick_TryAgain","_handle_onClick_Continue","replace","_handle_onChange_Identifier","event","target","value","_handle_onUpdateSecret","secret","renderChanging","classes","renderSuccess","renderFailure","renderPrompt","createDisabled","length","render"],"mappings":"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","sourcesContent":["// @flow\n\nimport Alert from '@material-ui/lab/Alert'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport IconLockReset from 'mdi-material-ui/LockReset'\nimport React from 'react'\n\nimport CompositeCardHeader, {\n  cardHeaderContentStyles,\n} from '../../rb-appbase-webapp/components/CompositeCardHeader'\nimport ResponsiveContentArea from '../../rb-appbase-webapp/components/ResponsiveContentArea'\n\nimport NewUserSecretInput from './NewUserSecretInput'\n\n//\n\nconst styles = {\n  card: {\n    minWidth: 350,\n    maxWidth: 1200,\n  },\n  ...cardHeaderContentStyles,\n}\n\n//\n\nclass ChangeSecretScreen extends React.Component<\n  {\n    classes: Object,\n  },\n  {\n    currentOperation: 'prompt' | 'changing' | 'success' | 'failure',\n    executionStatus: string,\n    User_CurrentSecret: string,\n    User_NewSecret: string,\n  },\n> {\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      currentOperation: 'prompt',\n      executionStatus: '',\n      User_CurrentSecret: '',\n      User_NewSecret: '',\n    }\n  }\n\n  _handle_onClick_Change = async () => {\n    const { User_CurrentSecret, User_NewSecret } = this.state\n\n    this.setState({\n      currentOperation: 'changing',\n    })\n\n    try {\n      const loc = window.location\n      const host = loc.protocol + '//' + loc.hostname + ':' + loc.port\n\n      const response = await fetch(host + '/auth/change-secret', {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          User_CurrentSecret,\n          User_NewSecret,\n        }),\n      })\n\n      const responseData = await response.json()\n\n      if (responseData.success) {\n        // In case of success, notify user\n        this.setState({ currentOperation: 'success' })\n      } else {\n        // In case of error, tell user what the error is\n        this.setState({\n          currentOperation: 'failure',\n          executionStatus: responseData.error,\n        })\n      }\n    } catch (err) {\n      // In case response could not be received properly, tell the user\n      // In case of error, tell user what the error is\n      this.setState({\n        currentOperation: 'failure',\n        executionStatus:\n          'Did not receive proper response from server. Please try again. Message:' + err.message,\n      })\n    }\n  }\n\n  _handle_onClick_CancelChange = () => {\n    this.setState({\n      currentOperation: 'failure',\n      executionStatus: 'User creation has been canceled',\n    })\n  }\n\n  _handle_onClick_TryAgain = () => {\n    this.setState({\n      User_CurrentSecret: '',\n      currentOperation: 'prompt',\n      executionStatus: '',\n    })\n  }\n\n  _handle_onClick_Continue = () => {\n    window.location.replace('/user/profile')\n  }\n\n  renderChanging() {\n    const { classes } = this.props\n\n    return (\n      <div>\n        <CompositeCardHeader icon={<IconLockReset />} subTitle=\"\" title=\"Updating password\" />\n\n        <Card className={classes.card} raised={true}>\n          <CardContent>\n            <br />\n            <Alert variant=\"outlined\" severity=\"info\">\n              Updating password. Please wait ...\n            </Alert>\n            <br />\n            <br />\n            <LinearProgress mode=\"query\" />\n          </CardContent>\n          <CardActions>\n            <Button onClick={this._handle_onClick_CancelChange}>Cancel</Button>\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n\n  renderSuccess() {\n    const { classes } = this.props\n\n    return (\n      <div>\n        <CompositeCardHeader icon={<IconLockReset />} subTitle=\"\" title=\"Password changed\" />\n\n        <Card className={classes.card}>\n          <CardContent>\n            <br />\n            <Alert variant=\"outlined\" severity=\"success\">\n              Password successfully changed.\n            </Alert>\n          </CardContent>\n          <CardActions>\n            <Button onClick={this._handle_onClick_Continue}>Continue</Button>\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n\n  renderFailure() {\n    const { classes } = this.props\n    const { executionStatus } = this.state\n\n    return (\n      <div>\n        <CompositeCardHeader\n          icon={<IconLockReset />}\n          subTitle=\"\"\n          title=\"Failed to update password\"\n        />\n\n        <Card className={classes.card}>\n          <CardContent>\n            <br />\n            <Alert variant=\"outlined\" severity=\"error\">\n              Updating password failed because {executionStatus}.\n            </Alert>\n          </CardContent>\n          <CardActions>\n            <Button onClick={this._handle_onClick_TryAgain}>Try Again</Button>\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n\n  _handle_onChange_Identifier = (event) => {\n    const User_CurrentSecret = event.target.value\n\n    this.setState({ User_CurrentSecret })\n  }\n\n  _handle_onUpdateSecret = (secret) => {\n    this.setState({ User_NewSecret: secret })\n  }\n\n  renderPrompt() {\n    const { classes } = this.props\n    const { User_CurrentSecret, User_NewSecret } = this.state\n\n    // User account identifier must be valid and secret must be present\n    const createDisabled = User_CurrentSecret.length < 5 || User_NewSecret === ''\n\n    return (\n      <div>\n        <CompositeCardHeader icon={<IconLockReset />} subTitle=\"\" title=\"Change password\" />\n\n        <Card className={classes.card}>\n          <CardContent>\n            <TextField\n              autoComplete=\"password\"\n              fullWidth={true}\n              label=\"Current (old) password\"\n              margin=\"normal\"\n              type=\"password\"\n              value={User_CurrentSecret}\n              variant=\"outlined\"\n              onChange={this._handle_onChange_Identifier}\n            />\n\n            <br />\n            <br />\n\n            <NewUserSecretInput onUpdateSecret={this._handle_onUpdateSecret} />\n          </CardContent>\n          <CardActions>\n            <Button disabled={createDisabled} onClick={this._handle_onClick_Change}>\n              Change\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n\n  render() {\n    const { currentOperation } = this.state\n\n    return (\n      <ResponsiveContentArea>\n        {currentOperation === 'prompt' && this.renderPrompt()}\n        {currentOperation === 'changing' && this.renderChanging()}\n        {currentOperation === 'success' && this.renderSuccess()}\n        {currentOperation === 'failure' && this.renderFailure()}\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default withStyles(styles)(ChangeSecretScreen)\n"],"file":"ChangeSecretScreen.js"}