{"version":3,"sources":["../../../../units/rb-account-management-webapp/components/AppDrawerAccountItem.jsx"],"names":["styles","theme","formControl","paddingLeft","spacing","paddingRight","loginButtonContainer","AppDrawerAccountItem","React","Component","constructor","props","context","_handle_onClick_Login","setState","loginDialogIsOpen","_handle_onChange_Account","event","operation","target","value","onClick","_handle_Login_Close","_handle_Login_NewUser","state","componentDidMount","componentWillUnmount","render","classes","Viewer","User_IsAnonymous","User_DisplayName"],"mappings":"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","sourcesContent":["// @flow\n\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FilledInput from '@material-ui/core/FilledInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport {\n  registerAuthenticationRequiredCallback,\n  unregisterAuthenticationRequiredCallback,\n} from './RequiresAuthentication'\nimport LoginDialog from './LoginDialog'\n\n//\n\nconst styles = (theme) => ({\n  formControl: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  loginButtonContainer: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n})\n\n//\n\nclass AppDrawerAccountItem extends React.Component<\n  { classes: Object, Viewer: Object, relay: Object, onClick: Function },\n  {\n    loginDialogIsOpen: boolean,\n  },\n> {\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      loginDialogIsOpen: false,\n    }\n  }\n\n  // Handle popping open the login dialog if authentication is required\n  componentDidMount() {\n    registerAuthenticationRequiredCallback(() => this.setState({ loginDialogIsOpen: true }))\n  }\n\n  componentWillUnmount() {\n    unregisterAuthenticationRequiredCallback()\n  }\n\n  _handle_onClick_Login = () => {\n    this.setState({ loginDialogIsOpen: true })\n  }\n\n  _handle_onChange_Account = (event) => {\n    const operation = event.target.value\n\n    if (operation === 'profile') {\n      this.props.onClick('/user/profile')\n    } else if (operation === 'login') {\n      this.setState({ loginDialogIsOpen: true })\n    } else if (operation === 'logout') {\n      this.props.onClick('/user/logout')\n    }\n  }\n\n  _handle_Login_Close = () => {\n    this.setState({ loginDialogIsOpen: false })\n  }\n\n  _handle_Login_NewUser = () => {\n    this.setState({ loginDialogIsOpen: false })\n\n    this.props.onClick('/user/new')\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n    const { User_IsAnonymous, User_DisplayName } = Viewer\n    const { loginDialogIsOpen } = this.state\n\n    return (\n      <div key=\"appdrawer-account\">\n        {User_IsAnonymous && (\n          <div className={classes.loginButtonContainer}>\n            <Button\n              color=\"primary\"\n              fullWidth={true}\n              key=\"account-button\"\n              variant=\"contained\"\n              onClick={this._handle_onClick_Login}\n            >\n              Log In\n            </Button>\n          </div>\n        )}\n\n        {!User_IsAnonymous && (\n          <FormControl\n            fullWidth={true}\n            key=\"account-list\"\n            variant=\"filled\"\n            className={classes.formControl}\n          >\n            <InputLabel htmlFor=\"user-account-select\">Current User</InputLabel>\n            <Select\n              id=\"user-account-select\"\n              input={<FilledInput name=\"account\" />}\n              value=\"userdisplayname\"\n              variant=\"filled\"\n              onChange={this._handle_onChange_Account}\n            >\n              <MenuItem component=\"div\" key=\"userdisplayname\" value=\"userdisplayname\">\n                <em>{User_DisplayName}</em>\n              </MenuItem>\n              <MenuItem component=\"div\" key=\"profile\" value=\"profile\">\n                Edit Profile\n              </MenuItem>\n              <Divider />\n              <MenuItem component=\"div\" key=\"login\" value=\"login\">\n                Change user\n              </MenuItem>\n              <MenuItem component=\"div\" key=\"logout\" value=\"logout\">\n                Log out\n              </MenuItem>\n            </Select>\n          </FormControl>\n        )}\n\n        <LoginDialog\n          open={loginDialogIsOpen}\n          handlerClose={this._handle_Login_Close}\n          handlerNewUser={this._handle_Login_NewUser}\n        />\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(withStyles(styles)(AppDrawerAccountItem), {\n  Viewer: graphql`\n    fragment AppDrawerAccountItem_Viewer on Viewer {\n      User_IsAnonymous\n      User_DisplayName\n    }\n  `,\n})\n"],"file":"AppDrawerAccountItem.js"}