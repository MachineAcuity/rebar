{"version":3,"sources":["../../../../units/rb-persister-cassandra/graphql/WinstonTransportCassandra.js"],"names":["require","config","process_pid","process","pid","local_ip","Uuid","cql","types","stringifyIfRequired","obj","createCopyWithNonNull","res","key","value","WinstonTransportCassandra","transport","constructor","options","keyspace","Error","client","Client","log","info","callback","setImmediate","emit","level","message","details","self","_insertLog","err","detailsSupplied","detailsPrep","Object","assign","issue_id","err_message","err_stack","err_info","req_headers","req_cookies","req_ip","req_body","user_id","site_id","stack","ignoreErr","console","error","req","headers","cookies","body","__DO_NOT_INCLUDE__","connection","remoteAddress","objectManager","Viewer_User_id","fromString","siteInformation","artifact_id","detailsRemaining","event","date","Date","toISOString","slice","datetime","port","env","PORT","host","HOST","debugWriteToConsoleLog","eventForConsole","chalk","black","bgYellowBright","redBright","bgBlack","gray","bgBlueBright","blueBright","execute","prepare","consistency","consistencies","one","writeErr"],"mappings":"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","sourcesContent":["// @flow\n\nimport chalk from 'chalk'\nimport cql from 'cassandra-driver'\nimport jsonStringifySafe from 'json-stringify-safe'\nimport transport from 'winston-transport'\n\nimport { debugWriteToConsoleLog } from '../../_configuration/debug'\nimport getLocalIP from '../../rb-base-server/getLocalIP'\n\n//\n\n// Read environment\nrequire('dotenv').config()\n\n//\n\nconst process_pid = process.pid\nconst local_ip = getLocalIP()\n\n//\n\nconst Uuid = cql.types.Uuid\n\n//\n\nfunction stringifyIfRequired(obj) {\n  if (typeof obj === 'string') return obj\n  else return jsonStringifySafe(obj)\n}\n\nfunction createCopyWithNonNull(obj) {\n  const res = {}\n\n  for (let key in obj) {\n    const value = obj[key]\n\n    if (value) res[key] = value\n  }\n\n  return res\n}\n\n//\n\nexport default class WinstonTransportCassandra extends transport {\n  client: Object\n  options: Object\n\n  constructor(options: Object) {\n    super(options)\n\n    if (!options.keyspace) {\n      throw new Error(\n        'rb-persister-cassandra WinstonTransportCassandra: options.keyspace is missing',\n      )\n    }\n\n    this.client = new cql.Client(options)\n  }\n\n  log(info: Object, callback: Function) {\n    setImmediate(() => {\n      this.emit('logged', info)\n    })\n\n    const { level, message, details } = info\n\n    const self = this\n    return self._insertLog(level, message, details, function(err) {\n      callback(err, !err)\n    })\n  }\n\n  _insertLog(level, message, detailsSupplied, callback) {\n    // Create shallow copy of details\n    const detailsPrep = Object.assign({}, detailsSupplied)\n\n    let issue_id = null\n    let err_message = null\n    let err_stack = null\n    let err_info = null\n    let req_headers = null\n    let req_cookies = null\n    let req_ip = null\n    let req_body = null\n    let user_id = null\n    let site_id = null\n\n    // Retrieve issue_id\n    if (detailsPrep.issue_id) {\n      issue_id = stringifyIfRequired(detailsPrep.issue_id)\n      delete detailsPrep.issue_id\n    }\n\n    // Retrieve error message, if available\n    try {\n      if (detailsPrep.err) {\n        const { message, stack } = detailsPrep.err\n\n        if (message && stack) {\n          err_message = stringifyIfRequired(message)\n          err_stack = stringifyIfRequired(stack)\n        } else {\n          err_message = stringifyIfRequired(detailsPrep.err)\n        }\n\n        delete detailsPrep.err\n      }\n    } catch (ignoreErr) {\n      console.error(ignoreErr)\n    }\n\n    // Retrieve err_info\n    if (detailsPrep.err_info) {\n      err_info = stringifyIfRequired(detailsPrep.err_info)\n      delete detailsPrep.err_info\n    }\n\n    // Retrieve request\n    try {\n      if (detailsPrep.req) {\n        const req = detailsPrep.req\n        delete detailsPrep.req\n\n        req_headers = stringifyIfRequired(req.headers)\n        req_cookies = stringifyIfRequired(req.cookies)\n        if (req.body && req.body.__DO_NOT_INCLUDE__ !== true) {\n          req_body = stringifyIfRequired(req.body)\n        }\n        req_ip = stringifyIfRequired(req.headers['x-real-ip'] || req.connection.remoteAddress)\n      }\n    } catch (ignoreErr) {\n      console.error(ignoreErr)\n    }\n\n    // Remove res. At a later point it might be interesting to retrieve data from res but at this\n    // point it is not used\n    delete detailsPrep.res\n\n    // Retrieve details from ObjectManager\n    try {\n      // Retrieve user_id, site_id\n      if (detailsPrep.objectManager) {\n        const objectManager: Object = { detailsPrep }\n        // Delete object first so that we do not fail json.stringify later\n        delete detailsPrep.objectManager\n\n        // Get user_id\n        try {\n          user_id = objectManager.Viewer_User_id\n          if (!user_id instanceof Uuid) user_id = Uuid.fromString(user_id)\n        } catch (ignoreErr) {\n          user_id = null\n        }\n\n        // Get site_id\n        try {\n          site_id = objectManager.siteInformation.artifact_id\n          if (!site_id instanceof Uuid) site_id = Uuid.fromString(site_id)\n        } catch (ignoreErr) {\n          site_id = null\n        }\n      }\n\n      // If artifact_id is provided, and site_id is not determined, use it\n      if (!site_id && detailsPrep.artifact_id) {\n        try {\n          site_id = detailsPrep.artifact_id\n          if (!site_id instanceof Uuid) site_id = Uuid.fromString(site_id)\n          delete detailsPrep.artifact_id\n        } catch (ignoreErr) {\n          site_id = null\n        }\n      }\n    } catch (ignoreErr) {\n      console.error(ignoreErr)\n    }\n\n    // Stringify trimmed down details\n    const detailsRemaining = stringifyIfRequired(detailsPrep)\n    const details = detailsRemaining === '{}' ? null : detailsRemaining\n\n    const event = {\n      date: new Date().toISOString().slice(0, 10),\n      datetime: new Date(),\n      level,\n      message,\n      details,\n      issue_id,\n      local_ip,\n      port: process.env.PORT,\n      host: process.env.HOST,\n      process_pid,\n      err_message,\n      err_stack,\n      err_info,\n      req_headers,\n      req_cookies,\n      req_ip,\n      req_body,\n      user_id,\n      site_id,\n    }\n\n    // Print to console, if so specified\n    if (debugWriteToConsoleLog) {\n      const eventForConsole = createCopyWithNonNull(event)\n\n      const { err_message, err_stack, message } = eventForConsole\n      delete eventForConsole.err_message\n      delete eventForConsole.err_stack\n      delete eventForConsole.message\n\n      if (level === 'error') {\n        if (err_message) console.error(chalk.black.bgYellowBright(err_message))\n        if (message) console.error(chalk.redBright.bgBlack(message))\n        if (details) console.error(chalk.gray.bgBlack(details))\n        if (err_stack) console.error(err_stack)\n      } else {\n        if (err_message) console.log(chalk.black.bgBlueBright(err_message))\n        if (message) console.log(chalk.blueBright.bgBlack(message))\n        if (details) console.error(chalk.gray.bgBlack(details))\n        if (err_stack) console.log(err_stack)\n      }\n    }\n\n    try {\n      // Execute as a prepared query as it would be executed multiple times\n      return this.client.execute(\n        `INSERT INTO logs (\n          date,\n          datetime,\n          level,\n          message,\n          details,\n          issue_id,\n          local_ip,\n          port,\n          host,\n          process_pid,\n          err_message,\n          err_stack,\n          err_info,\n          req_headers,\n          req_cookies,\n          req_ip,\n          req_body,\n          user_id,\n          site_id\n      )\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      USING TTL 7776000`, // 90 * 86400 = 90 days\n        [\n          event.date,\n          event.datetime,\n          event.level,\n          event.message,\n          event.details,\n          event.issue_id,\n          event.local_ip,\n          event.port,\n          event.host,\n          event.process_pid,\n          event.err_message,\n          event.err_stack,\n          event.err_info,\n          event.req_headers,\n          event.req_cookies,\n          event.req_ip,\n          event.req_body,\n          event.user_id,\n          event.site_id,\n        ],\n        { prepare: true, consistency: cql.types.consistencies.one },\n        callback,\n      )\n    } catch (writeErr) {\n      console.error('Failed to write to log because ' + writeErr.message + '\\n' + writeErr.stack)\n    }\n  }\n}\n"],"file":"WinstonTransportCassandra.js"}