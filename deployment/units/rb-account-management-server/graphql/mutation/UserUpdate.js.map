{"version":3,"sources":["../../../../../units/rb-account-management-server/graphql/mutation/UserUpdate.js"],"names":["name","inputFields","User_DisplayName","type","GraphQLNonNull","GraphQLString","User_PrimaryEmail","User_PrimaryPhone","outputFields","Viewer","ViewerType","resolve","params","args","context","rootValue","ec","objectManager","om","getOneObject_async","id","getViewerUserId","mutateAndGetPayload","update"],"mappings":";;AAEA;AACA;;AAEA;AACA,wG;;AAEA;;AAEe,gDAA6B;AAC1CA,EAAAA,IAAI,EAAE,YADoC;;AAG1CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,gBAAgB,EAAE,EAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB,CAAR,EADP;AAEXC,IAAAA,iBAAiB,EAAE,EAAEH,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB,CAAR,EAFR;AAGXE,IAAAA,iBAAiB,EAAE,EAAEJ,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB,CAAR,EAHR,EAH6B;;;AAS1CG,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE;AACNN,MAAAA,IAAI,EAAEO,mBADA;AAENC,MAAAA,OAAO,EAAE,CAACC,MAAD,EAAS,EAAE,GAAGC,IAAL,EAAT,EAAsBC,OAAtB,EAA+B,EAAEC,SAAS,EAAEC,EAAb,EAA/B,KAAqD;AAC5D,cAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,eAAOD,aAAa,CAACE,kBAAd,CAAiC,MAAjC,EAAyC,EAAEC,EAAE,EAAEH,aAAa,CAACI,eAAd,EAAN,EAAzC,CAAP;AACD,OALK,EADI,EAT4B;;;;AAmB1CC,EAAAA,mBAAmB,EAAE;AACnB,IAAEpB,gBAAF,EAAoBI,iBAApB,EAAuCC,iBAAvC,EADmB;AAEnBO,EAAAA,OAFmB;AAGnB,IAAEC,SAAS,EAAEC,EAAb,EAHmB;AAIhB;AACH,UAAMC,aAA4B,GAAGD,EAAE,CAACE,EAAH,EAArC;AACA,UAAMD,aAAa,CAACM,MAAd,CAAqB,MAArB,EAA6B;AACjCH,MAAAA,EAAE,EAAEH,aAAa,CAACI,eAAd,EAD6B;AAEjCnB,MAAAA,gBAFiC;AAGjCI,MAAAA,iBAHiC;AAIjCC,MAAAA,iBAJiC,EAA7B,CAAN;;;AAOA,WAAO,EAAP;AACD,GAjCyC,EAA7B,C","sourcesContent":["// @flow\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport ObjectManager from '../../../rb-base-server/ObjectManager'\nimport ViewerType from '../../../rb-appbase-server/graphql/type/ViewerType'\n\n//\n\nexport default mutationWithClientMutationId({\n  name: 'UserUpdate',\n\n  inputFields: {\n    User_DisplayName: { type: new GraphQLNonNull(GraphQLString) },\n    User_PrimaryEmail: { type: new GraphQLNonNull(GraphQLString) },\n    User_PrimaryPhone: { type: new GraphQLNonNull(GraphQLString) },\n  },\n\n  outputFields: {\n    Viewer: {\n      type: ViewerType,\n      resolve: (params, { ...args }, context, { rootValue: ec }) => {\n        const objectManager: ObjectManager = ec.om()\n        return objectManager.getOneObject_async('User', { id: objectManager.getViewerUserId() })\n      },\n    },\n  },\n\n  mutateAndGetPayload: async (\n    { User_DisplayName, User_PrimaryEmail, User_PrimaryPhone },\n    context,\n    { rootValue: ec },\n  ) => {\n    const objectManager: ObjectManager = ec.om()\n    await objectManager.update('User', {\n      id: objectManager.getViewerUserId(),\n      User_DisplayName,\n      User_PrimaryEmail,\n      User_PrimaryPhone,\n    })\n\n    return {}\n  },\n})\n"],"file":"UserUpdate.js"}